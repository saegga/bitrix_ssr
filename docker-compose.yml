version: '3.8'

services:
  nginx:
    image: nginx:latest
    container_name: nginx
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf  # Конфиг Nginx
      - ./public_html:/var/www/html  # Сайт и API файлы из public_html
    depends_on:
      - php
      - frontend
    networks:
      - bitrixssr

  php:
    #image: php:8.2-fpm
    build: ./docker/php
    container_name: php
    restart: always
    volumes:
      - ./public_html/backend:/var/www/html/backend  # Сайт и API файлы из public_html
      - ./docker/php/php.ini:/usr/local/etc/php/php.ini  # Конфиг PHP
    networks:
      - bitrixssr
  db:
    #image: mariadb:latest
    build: ./docker/db/mysql
    container_name: mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: bitrix
      MYSQL_USER: bitrix
      MYSQL_PASSWORD: bitrix
    volumes:
      - ./docker/db/mysql/init:/docker-entrypoint-initdb.d
      - .db:/var/lib/mysql  # Указываем физическую папку на хосте для данных
    ports:
      - "3306:3306"
    networks: 
      -  bitrixssr
  
  phpmyadmin:
    depends_on:
      - db
    image: phpmyadmin/phpmyadmin
    restart: always
    ports:
      - 8080:80
    environment:
      PMA_HOST: db
      MYSQL_ROOT_PASSWORD: root

  frontend:
    build: ./public_html/frontend
    container_name: nuxt
    restart: always
    ports:
      - "3000:3000"
    volumes:
      - ./public_html/frontend:/app  # Связываем папку frontend с контейнером для Nuxt
    environment:
      - NUXT_HOST=0.0.0.0
      - NUXT_PORT=3000
    networks: 
      - bitrixssr
    #command: ["npm", "run", "start"]  # Запуск Nuxt в режиме SSR ["npm", "run", "start"] "sh", "-c", "npm run build && npm run start"

volumes:
  mysql_data: {} # Тома не требуется, так как мы используем bind mount для данных MariaDB docker run -it proj1_frontend:latest sh

networks:
  bitrixssr:
#    ipam:
#      config:
#        - subnet: 172.20.0.0/24